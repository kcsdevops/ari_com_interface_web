name: Deploy to Azure Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Azure Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.ACR_URL }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./webapp
        push: true
        tags: ${{ secrets.ACR_URL }}/ari-automation:${{ github.sha }},${{ secrets.ACR_URL }}/ari-automation:latest
        cache-from: type=registry,ref=${{ secrets.ACR_URL }}/ari-automation:latest
        cache-to: type=inline
    
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.WEBAPP_NAME }}
        images: ${{ secrets.ACR_URL }}/ari-automation:${{ github.sha }}
    
    - name: Azure CLI script
      uses: azure/CLI@v1
      with:
        inlineScript: |
          # Configure Web App settings
          az webapp config appsettings set --name ${{ secrets.WEBAPP_NAME }} --resource-group ${{ secrets.RESOURCE_GROUP }} --settings \
            AZURE_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }} \
            AZURE_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }} \
            AZURE_TENANT_ID=${{ secrets.AZURE_TENANT_ID }} \
            AZURE_STORAGE_ACCOUNT_NAME=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} \
            AZURE_STORAGE_CONNECTION_STRING=${{ secrets.AZURE_STORAGE_CONNECTION_STRING }} \
            SECRET_KEY=${{ secrets.SECRET_KEY }}
