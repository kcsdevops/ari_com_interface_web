name: Azure Web App Continuous Deployment

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./webapp
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/ari-webapp:latest
          ghcr.io/${{ github.repository_owner }}/ari-webapp:${{ github.sha }}
    
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.WEBAPP_NAME }}
        images: ghcr.io/${{ github.repository_owner }}/ari-webapp:${{ github.sha }}
    
    - name: Configure Web App Settings
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az webapp config appsettings set --name ${{ secrets.WEBAPP_NAME }} --resource-group ${{ secrets.RESOURCE_GROUP }} --settings \
            AZURE_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }} \
            AZURE_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }} \
            AZURE_TENANT_ID=${{ secrets.AZURE_TENANT_ID }} \
            AZURE_STORAGE_ACCOUNT_NAME=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} \
            AZURE_STORAGE_CONNECTION_STRING=${{ secrets.AZURE_STORAGE_CONNECTION_STRING }} \
            SECRET_KEY=${{ secrets.SECRET_KEY }} \
            WEBSITES_PORT=8000 \
            WEBSITES_CONTAINER_START_TIME_LIMIT=600 \
            APP_VERSION=${{ github.sha }}
    
    - name: Wait for deployment to complete
      run: |
        echo "Waiting for deployment to complete..."
        sleep 60
    
    - name: Health check
      run: |
        STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://${{ secrets.WEBAPP_NAME }}.azurewebsites.net/health)
        echo "Status code: $STATUS_CODE"
        
        if [[ "$STATUS_CODE" != "200" ]]; then
          echo "Health check failed! Web app is not responding properly."
          exit 1
        else
          echo "Deployment successful! Web app is healthy."
        fi
